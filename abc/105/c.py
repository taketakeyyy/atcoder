# -*- coding:utf-8 -*-
"""
 1  0  1 1
-8  4 -2 1
----------
-8 + -2 + 1 = -9

                    1   -2    4    -8      16
1のとき表現できる数  1~1 -2~1  2~5 -10~-3   6~21
0のとき表現できる数  0~1  0~1 -2~1  -2~5  -10~5
                   ----------------------------
                   0~1  -2~1 -2~5 -10~5  -10~21      

"""

"""解説
https://www.youtube.com/watch?v=7bbIZTIeDZM

？進数の計算

(1) -9のときを考える
-9は2で割り切れないので、0bit目は必ず1になる。(※1)

よって、-9を-2進数で表現すると、 

?????1

になるはず。

ということは?????0は-10である。

?????の部分はいくつか？と考えたとき、
一桁減らすので、-2で割るとよい。（-2進数なので。10進数のときは10で割るでしょ？）

よって、?????の部分は5

(2) 5のときを考える
5は2で割り切れないので、0bit目は必ず1になる(※2)

よって、5を-2進数で表現すると、

????1

になる。

ということは????0は4である。

????の部分はいくつか？と考えたとき、
一桁減らすので、-2で割る。

よって、????の部分は-2

(3) -2のときを考える
-2は2で割り切れるので、0bit目は0である。(※3)

よって、-2を-2進数で表現すると、

???0

???の部分はいくつか？と考えたとき、
一桁減らすので、-2で割る。

よって、???の部分は1

(4) 1のときを考える
1は2で割り切れないので、0bit目は1(※4)

1を-2進数で表現すると、

??1

??0は0

??の部分はいくつか？と考えたとき、当然0でしょう。

よって、答えは、
(※4)(※3)(※2)(※1)で、
1011
になる。

この一連の計算を一般化すればよい。

"""
def solve():
    N = int(input())
    ans = ""
    
    if N==0:
        print(N)
        return

    while N!=0:
        if N%2 != 0:
            # 2で割り切れない
            ans = "1" + ans
            N -= 1
            N //= -2
        else:
            ans = "0" + ans
            N //= -2
    
    print(ans)


if __name__ == "__main__":
    solve()
